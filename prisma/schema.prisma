// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // User owns teams
  teams     Team[]
}

model Team {
  id              String   @id @default(cuid())
  name            String
  sleeperRosterId String?  // Link to Sleeper roster
  ownerId         String   // User who owns this team
  leagueId        String   // League this team belongs to
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relationships
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  league  League @relation(fields: [leagueId], references: [id], onDelete: Cascade)
  
  @@unique([ownerId, leagueId]) // User can only have one team per league
  @@unique([sleeperRosterId, leagueId]) // Roster can only be claimed once per league
}

model League {
  id              String   @id @default(cuid())
  name            String
  description     String?
  sleeperLeagueId String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // League contains teams
  teams           Team[]
}
